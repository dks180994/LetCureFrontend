{"ast":null,"code":"var _jsxFileName = \"D:\\\\DOCTOR PROJECT\\\\Porject_Doctor\\\\doctorapp\\\\src\\\\Components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport BoxRHS from \"./Main/BoxRHS\";\nimport \"./Main.css\";\nimport PatientReg from \"./Main/Login_Reg/PatientReg\";\nimport { Routes, Route } from \"react-router-dom\";\nimport DoctorLogin from \"./Main/Login_Reg/DoctorLogin\";\nimport PatientLogin from \"./Main/Login_Reg/PatientLogin\";\nimport DoctorReg from \"./Main/Login_Reg/DoctorReg\";\nimport AfterLogin from \"./Main/Login_Reg/AfterLogin/AfterLogin\";\nimport { useState } from \"react\";\nimport AfterPatientLoginBlock from \"./Main/Login_Reg/AfterLogin/AfterPatientLogin/AfterPatientLoginBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const isDocLog = localStorage.getItem(\"Doctor Log\");\n  const isPatLog = localStorage.getItem(\"Patient Log\");\n  const [redirect, setRedirect] = useState();\n\n  if (isPatLog === \"true\") {\n    setRedirect( /*#__PURE__*/_jsxDEV(AfterPatientLoginBlock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this));\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(BoxRHS, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 36\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"doctorlogin\",\n            element: /*#__PURE__*/_jsxDEV(DoctorLogin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"patientlogin\",\n            element: /*#__PURE__*/_jsxDEV(PatientLogin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"patientRegistration\",\n          element: /*#__PURE__*/_jsxDEV(PatientReg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"doctorRegistration\",\n          element: /*#__PURE__*/_jsxDEV(DoctorReg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"admin\",\n          element: /*#__PURE__*/_jsxDEV(AfterLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Main, \"cHGHkn4LHhkIEmtsSprHdxgf7Tw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["BoxRHS","PatientReg","Routes","Route","DoctorLogin","PatientLogin","DoctorReg","AfterLogin","useState","AfterPatientLoginBlock","Main","isDocLog","localStorage","getItem","isPatLog","redirect","setRedirect"],"sources":["D:/DOCTOR PROJECT/Porject_Doctor/doctorapp/src/Components/Main.js"],"sourcesContent":["import BoxRHS from \"./Main/BoxRHS\";\r\n\r\nimport \"./Main.css\";\r\nimport PatientReg from \"./Main/Login_Reg/PatientReg\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport DoctorLogin from \"./Main/Login_Reg/DoctorLogin\";\r\nimport PatientLogin from \"./Main/Login_Reg/PatientLogin\";\r\nimport DoctorReg from \"./Main/Login_Reg/DoctorReg\";\r\nimport AfterLogin from \"./Main/Login_Reg/AfterLogin/AfterLogin\"\r\nimport { useState } from \"react\";\r\nimport AfterPatientLoginBlock from \"./Main/Login_Reg/AfterLogin/AfterPatientLogin/AfterPatientLoginBlock\";\r\n\r\nconst Main = () => {\r\n  const isDocLog = localStorage.getItem(\"Doctor Log\");\r\n  const isPatLog = localStorage.getItem(\"Patient Log\");\r\n  const [redirect , setRedirect] = useState();\r\n  if(isPatLog === \"true\")\r\n  {\r\n    setRedirect(<AfterPatientLoginBlock/>)\r\n  }\r\n  else{\r\n    return (\r\n      <div>      \r\n        <Routes>\r\n          <Route path=\"/\" element={<BoxRHS/>} >\r\n            <Route path=\"doctorlogin\" element={<DoctorLogin />} />\r\n            <Route path=\"patientlogin\" element={<PatientLogin />} />\r\n          </Route>      \r\n          <Route path=\"patientRegistration\" element={<PatientReg />} />\r\n          <Route path=\"doctorRegistration\" element={<DoctorReg />} />\r\n          <Route path=\"admin\" element={<AfterLogin/>}/>     \r\n          \r\n        </Routes>\r\n      </div>\r\n    );\r\n  }\r\n}  \r\n\r\n\r\nexport default Main;\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,eAAnB;AAEA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,sBAAP,MAAmC,sEAAnC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;EACA,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAjB;EACA,MAAM,CAACE,QAAD,EAAYC,WAAZ,IAA2BR,QAAQ,EAAzC;;EACA,IAAGM,QAAQ,KAAK,MAAhB,EACA;IACEE,WAAW,eAAC,QAAC,sBAAD;MAAA;MAAA;MAAA;IAAA,QAAD,CAAX;EACD,CAHD,MAII;IACF,oBACE;MAAA,uBACE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,MAAD;YAAA;YAAA;YAAA;UAAA,QAAzB;UAAA,wBACE,QAAC,KAAD;YAAO,IAAI,EAAC,aAAZ;YAA0B,OAAO,eAAE,QAAC,WAAD;cAAA;cAAA;cAAA;YAAA;UAAnC;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,IAAI,EAAC,cAAZ;YAA2B,OAAO,eAAE,QAAC,YAAD;cAAA;cAAA;cAAA;YAAA;UAApC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE,QAAC,KAAD;UAAO,IAAI,EAAC,qBAAZ;UAAkC,OAAO,eAAE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QAA3C;UAAA;UAAA;UAAA;QAAA,QALF,eAME,QAAC,KAAD;UAAO,IAAI,EAAC,oBAAZ;UAAiC,OAAO,eAAE,QAAC,SAAD;YAAA;YAAA;YAAA;UAAA;QAA1C;UAAA;UAAA;UAAA;QAAA,QANF,eAOE,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,OAAO,eAAE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QAA7B;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAcD;AACF,CAxBD;;GAAMN,I;;KAAAA,I;AA2BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}
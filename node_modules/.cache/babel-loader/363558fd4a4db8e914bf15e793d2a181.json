{"ast":null,"code":"var _jsxFileName = \"D:\\\\DOCTOR PROJECT\\\\Porject_Doctor\\\\doctorapp\\\\src\\\\Components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport BoxRHS from \"./Main/BoxRHS\";\nimport \"./Main.css\";\nimport PatientReg from \"./Main/Login_Reg/PatientReg\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport DoctorLogin from \"./Main/Login_Reg/DoctorLogin\";\nimport PatientLogin from \"./Main/Login_Reg/PatientLogin\";\nimport DoctorReg from \"./Main/Login_Reg/DoctorReg\";\nimport AfterLogin from \"./Main/Login_Reg/AfterLogin/AfterLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const loginRedirect = useNavigate();\n  const isDocLog = localStorage.getItem(\"Doctor Log\");\n  const isPatLog = localStorage.getItem(\"Patient Log\");\n\n  if (isPatLog === \"true\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loginRedirect( /*#__PURE__*/_jsxDEV(AfterPatientLoginBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this))\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(BoxRHS, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"doctorlogin\",\n          element: /*#__PURE__*/_jsxDEV(DoctorLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"patientlogin\",\n          element: /*#__PURE__*/_jsxDEV(PatientLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"patientRegistration\",\n        element: /*#__PURE__*/_jsxDEV(PatientReg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"doctorRegistration\",\n        element: /*#__PURE__*/_jsxDEV(DoctorReg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"admin\",\n        element: /*#__PURE__*/_jsxDEV(AfterLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"oXy1nKkN5kKSEWDOphNYHMR7uWk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["BoxRHS","PatientReg","Routes","Route","useNavigate","DoctorLogin","PatientLogin","DoctorReg","AfterLogin","Main","loginRedirect","isDocLog","localStorage","getItem","isPatLog"],"sources":["D:/DOCTOR PROJECT/Porject_Doctor/doctorapp/src/Components/Main.js"],"sourcesContent":["import BoxRHS from \"./Main/BoxRHS\";\r\n\r\nimport \"./Main.css\";\r\nimport PatientReg from \"./Main/Login_Reg/PatientReg\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport DoctorLogin from \"./Main/Login_Reg/DoctorLogin\";\r\nimport PatientLogin from \"./Main/Login_Reg/PatientLogin\";\r\nimport DoctorReg from \"./Main/Login_Reg/DoctorReg\";\r\nimport AfterLogin from \"./Main/Login_Reg/AfterLogin/AfterLogin\"\r\n\r\n\r\n\r\n\r\nconst Main = () => {\r\n  const loginRedirect = useNavigate();\r\n  const isDocLog = localStorage.getItem(\"Doctor Log\");\r\n  const isPatLog = localStorage.getItem(\"Patient Log\")\r\n  if(isPatLog===\"true\"){\r\n    return(\r\n      <> \r\n        {loginRedirect(<AfterPatientLoginBlock/>)}\r\n      </>\r\n     \r\n    );\r\n  }\r\n  return (\r\n    <div>      \r\n      <Routes>\r\n        <Route path=\"/\" element={<BoxRHS/>} >\r\n          <Route path=\"doctorlogin\" element={<DoctorLogin />} />\r\n          <Route path=\"patientlogin\" element={<PatientLogin />} />\r\n        </Route>      \r\n        <Route path=\"patientRegistration\" element={<PatientReg />} />\r\n        <Route path=\"doctorRegistration\" element={<DoctorReg />} />\r\n        <Route path=\"admin\" element={<AfterLogin/>}/>     \r\n        \r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,eAAnB;AAEA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;;;;AAKA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAMC,aAAa,GAAGN,WAAW,EAAjC;EACA,MAAMO,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;EACA,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAjB;;EACA,IAAGC,QAAQ,KAAG,MAAd,EAAqB;IACnB,oBACE;MAAA,UACGJ,aAAa,eAAC,QAAC,sBAAD;QAAA;QAAA;QAAA;MAAA,QAAD;IADhB,iBADF;EAMD;;EACD,oBACE;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAAzB;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,aAAZ;UAA0B,OAAO,eAAE,QAAC,WAAD;YAAA;YAAA;YAAA;UAAA;QAAnC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,IAAI,EAAC,cAAZ;UAA2B,OAAO,eAAE,QAAC,YAAD;YAAA;YAAA;YAAA;UAAA;QAApC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,KAAD;QAAO,IAAI,EAAC,qBAAZ;QAAkC,OAAO,eAAE,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MAA3C;QAAA;QAAA;QAAA;MAAA,QALF,eAME,QAAC,KAAD;QAAO,IAAI,EAAC,oBAAZ;QAAiC,OAAO,eAAE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MAA1C;QAAA;QAAA;QAAA;MAAA,QANF,eAOE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,OAAO,eAAE,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MAA7B;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA1BD;;GAAMD,I;UACkBL,W;;;KADlBK,I;AA4BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}